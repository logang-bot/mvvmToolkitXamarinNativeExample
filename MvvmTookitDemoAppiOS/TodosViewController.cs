// This file has been autogenerated from a class added in the UI designer.

using System;
using System.ComponentModel;
using Foundation;
using SharedCode.DI;
using SharedCode.ViewModel;
using UIKit;

namespace MvvmTookitDemoAppiOS
{
	public partial class TodosViewController : UIViewController
	{
		private TodoViewModel viewModel = IocService.GetService<TodoViewModel>();

		public TodosViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            viewModel.PropertyChanged += updateUI;
            viewModel.LoadSingleTodoCommand.Execute(null);
			updateButton.TouchUpInside += (object sender, EventArgs e) =>
			{
				viewModel.Todo.Title = "fjdklsa";
				viewModel.Todo.Completed = !viewModel.Todo.Completed;
			};
			goToCommentsButton.TouchUpInside += (object sender, EventArgs e) =>
			{
				var vc = this.Storyboard.InstantiateViewController("CommentsViewController") as CommentsViewController;
				Console.WriteLine("aboud load single coment");
				viewModel.LoadSingleCommentCommand.Execute("2");
				ShowViewController(vc, this);
			};
        }

        public void updateUI(object sender, PropertyChangedEventArgs e)
		{
			Console.WriteLine("updateUI");
			if (viewModel.Todo != null)
			{
				idLabel.Text = viewModel.Todo.Id.ToString();
				userIdLabel.Text = viewModel.Todo.UserId.ToString();
				titleLabel.Text = viewModel.Todo.Title;
				completedLabel.Text = viewModel.Todo.Completed.ToString();
                completedSwitch.SetState(viewModel.Todo.Completed, true);
                viewModel.Todo.PropertyChanged += updateFields;
			}
		}

		public void updateFields(object sender, PropertyChangedEventArgs e)
        {
			Console.WriteLine("updateFields");
			switch (e.PropertyName)
			{
				case nameof(viewModel.Todo.Id):
					idLabel.Text = viewModel.Todo.Id.ToString();
					break;
                case nameof(viewModel.Todo.UserId):
					userIdLabel.Text = viewModel.Todo.UserId.ToString();
					break;
				case nameof(viewModel.Todo.Title):
					titleLabel.Text = viewModel.Todo.Title;
					break;	
				case nameof(viewModel.Todo.Completed):
					completedLabel.Text = viewModel.Todo.Completed.ToString();
					completedSwitch.SetState(viewModel.Todo.Completed, true);
					break;
            }
        }
    }
}
